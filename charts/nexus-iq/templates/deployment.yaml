apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "iqserver.fullname" . }}
  labels:
    {{- include "iqserver.labels" . | nindent 4 }}
    {{- if .Values.iq.extraLabels }}
      {{- with .Values.iq.extraLabels }}
        {{ toYaml . | indent 4 }}
      {{- end }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.deploymentStrategy }}
  selector:
    matchLabels:
      {{- include "iqserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "iqserver.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "iqserver.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.fixOwner.enabled }}
      initContainers:
        - name: chown-vols
          image: "busybox:latest"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: true
          command: ['sh', '-c', 'chown -R {{ .Values.fixOwner.updateUser }}:{{ .Values.fixOwner.updateGroup }} /var/log/nexus-iq-server {{ .Values.configYaml.sonatypeWork }}']
          volumeMounts:
            - mountPath: {{ .Values.configYaml.sonatypeWork }}
              name: nxiq-pv-data
            - mountPath: /var/log/nexus-iq-server
              name: nxiq-pv-log
            - mountPath: /etc/nexus-iq-server
              name: config-volume
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SONATYPE_INTERNAL_HOST_SYSTEM
              value: {{ template "iqserver.internalHostSystem" . }}
            - name: SONATYPE_WORK
              value: {{ .Values.configYaml.sonatypeWork }}
{{ toYaml .Values.iq.env | indent 12 }}
          ports:
            - name: application
              containerPort: {{ .Values.iq.applicationPort }}
              protocol: TCP
            - name: admin
              containerPort: {{ .Values.iq.adminPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: admin
              {{- if .Values.iq.livenessProbe }}
                {{- toYaml .Values.iq.livenessProbe | nindent 12 }}
              {{- end }}
          readinessProbe:
            httpGet:
              path: /
              port: application
              {{- if .Values.iq.livenessProbe }}
                {{- toYaml .Values.iq.readinessProbe | nindent 12 }}
              {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.configYaml.sonatypeWork }}
              name: nxiq-pv-data
            - mountPath: /var/log/nexus-iq-server
              name: nxiq-pv-log
            - mountPath: /etc/nexus-iq-server
              name: config-volume
  {{- if and (.Values.iq.secretName) (.Values.iq.secretMountName) }}
            - mountPath: {{ .Values.iq.secretMountName }}
              name: secret-volume
              readOnly: true
  {{- end }}
  {{- if .Values.iq.licenseSecret }}
            - mountPath: /etc/nexus-iq-license
              name: license-volume
  {{- end }}
      volumes:
        - name: nxiq-pv-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (printf "%s-%s" (include "iqserver.fullname" .) "data") }}
        - name: nxiq-pv-log
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingLogClaim | default (printf "%s-%s" (include "iqserver.fullname" .) "log") }}
        - name: config-volume
          configMap:
            name: {{ template "iqserver.fullname" . }}-conf
            items:
              - key: config.yml
                path: config.yml
  {{- if .Values.iq.licenseSecret }}
        - name: license-volume
          secret:
            secretName: {{ template "iqserver.fullname" . }}-license
  {{- end }}
  {{- if and (.Values.iq.secretName) (.Values.iq.secretMountName) }}
        - name: secret-volume
          secret:
            secretName: {{ .Values.iq.secretName }}
  {{- end}}          
        {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
